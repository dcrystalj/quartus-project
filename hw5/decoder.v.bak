module decoder (
    input [5:0] data,
    output reg [7:0] cipher
);

//1 = 00
//2 = 01
//3 = 10
always @(data)
    case (data)
        6'b101001: cipher = 8'b01000001; //A = 332
        6'b000110: cipher = 8'b01000010; //B = 123
        6'b001001: cipher = 8'b01000011; //C = 132
        6'b010101: cipher = 8'b01000100; //D = 222
        6'b100000: cipher = 8'b01000101; //E = 311
        6'b000000: cipher = 8'b01000110; //F = 111
        6'b010001: cipher = 8'b01000111; //G = 212
        6'b100101: cipher = 8'b01001000; //H = 322
        6'b101010: cipher = 8'b01001001; //I = 333
        6'b000100: cipher = 8'b01001010; //J = 121
        6'b100110: cipher = 8'b01001011; //K = 323
        6'b011000: cipher = 8'b01001100; //L = 231
        6'b010010: cipher = 8'b01001101; //M = 213
        6'b100001: cipher = 8'b01001110; //N = 312
        6'b001000: cipher = 8'b01001111; //O = 131
        6'b011001: cipher = 8'b01010000; //P = 232
        6'b101000: cipher = 8'b01010001; //Q = 331
        6'b000001: cipher = 8'b01010010; //R = 112
        6'b001010: cipher = 8'b01010011; //S = 133
        6'b011010: cipher = 8'b01010100; //T = 233
        6'b100100: cipher = 8'b01010101; //U = 321
        6'b010000: cipher = 8'b01010110; //V = 211
        6'b010110: cipher = 8'b01010111; //W = 223
        6'b000101: cipher = 8'b01010111; //X = 122
        6'b000010: cipher = 8'b01010111; //Y = 113
        6'b010100: cipher = 8'b01010111; //Z = 221
        default:   cipher = 8'b00101110; //. = 'h2E
    endcase

endmodule