--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=12 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_lpa
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[11..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[11..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode1859w[1..0]	: WIRE;
	w_anode1868w[3..0]	: WIRE;
	w_anode1885w[3..0]	: WIRE;
	w_anode1895w[3..0]	: WIRE;
	w_anode1905w[3..0]	: WIRE;
	w_anode1915w[3..0]	: WIRE;
	w_anode1925w[3..0]	: WIRE;
	w_anode1935w[3..0]	: WIRE;
	w_anode1945w[3..0]	: WIRE;
	w_anode1957w[1..0]	: WIRE;
	w_anode1964w[3..0]	: WIRE;
	w_anode1975w[3..0]	: WIRE;
	w_anode1985w[3..0]	: WIRE;
	w_anode1995w[3..0]	: WIRE;
	w_anode2005w[3..0]	: WIRE;
	w_anode2015w[3..0]	: WIRE;
	w_anode2025w[3..0]	: WIRE;
	w_anode2035w[3..0]	: WIRE;
	w_data1857w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[11..0] = eq_wire[11..0];
	eq_wire[] = ( ( w_anode2035w[3..3], w_anode2025w[3..3], w_anode2015w[3..3], w_anode2005w[3..3], w_anode1995w[3..3], w_anode1985w[3..3], w_anode1975w[3..3], w_anode1964w[3..3]), ( w_anode1945w[3..3], w_anode1935w[3..3], w_anode1925w[3..3], w_anode1915w[3..3], w_anode1905w[3..3], w_anode1895w[3..3], w_anode1885w[3..3], w_anode1868w[3..3]));
	w_anode1859w[] = ( (w_anode1859w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1868w[] = ( (w_anode1868w[2..2] & (! w_data1857w[2..2])), (w_anode1868w[1..1] & (! w_data1857w[1..1])), (w_anode1868w[0..0] & (! w_data1857w[0..0])), w_anode1859w[1..1]);
	w_anode1885w[] = ( (w_anode1885w[2..2] & (! w_data1857w[2..2])), (w_anode1885w[1..1] & (! w_data1857w[1..1])), (w_anode1885w[0..0] & w_data1857w[0..0]), w_anode1859w[1..1]);
	w_anode1895w[] = ( (w_anode1895w[2..2] & (! w_data1857w[2..2])), (w_anode1895w[1..1] & w_data1857w[1..1]), (w_anode1895w[0..0] & (! w_data1857w[0..0])), w_anode1859w[1..1]);
	w_anode1905w[] = ( (w_anode1905w[2..2] & (! w_data1857w[2..2])), (w_anode1905w[1..1] & w_data1857w[1..1]), (w_anode1905w[0..0] & w_data1857w[0..0]), w_anode1859w[1..1]);
	w_anode1915w[] = ( (w_anode1915w[2..2] & w_data1857w[2..2]), (w_anode1915w[1..1] & (! w_data1857w[1..1])), (w_anode1915w[0..0] & (! w_data1857w[0..0])), w_anode1859w[1..1]);
	w_anode1925w[] = ( (w_anode1925w[2..2] & w_data1857w[2..2]), (w_anode1925w[1..1] & (! w_data1857w[1..1])), (w_anode1925w[0..0] & w_data1857w[0..0]), w_anode1859w[1..1]);
	w_anode1935w[] = ( (w_anode1935w[2..2] & w_data1857w[2..2]), (w_anode1935w[1..1] & w_data1857w[1..1]), (w_anode1935w[0..0] & (! w_data1857w[0..0])), w_anode1859w[1..1]);
	w_anode1945w[] = ( (w_anode1945w[2..2] & w_data1857w[2..2]), (w_anode1945w[1..1] & w_data1857w[1..1]), (w_anode1945w[0..0] & w_data1857w[0..0]), w_anode1859w[1..1]);
	w_anode1957w[] = ( (w_anode1957w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1964w[] = ( (w_anode1964w[2..2] & (! w_data1857w[2..2])), (w_anode1964w[1..1] & (! w_data1857w[1..1])), (w_anode1964w[0..0] & (! w_data1857w[0..0])), w_anode1957w[1..1]);
	w_anode1975w[] = ( (w_anode1975w[2..2] & (! w_data1857w[2..2])), (w_anode1975w[1..1] & (! w_data1857w[1..1])), (w_anode1975w[0..0] & w_data1857w[0..0]), w_anode1957w[1..1]);
	w_anode1985w[] = ( (w_anode1985w[2..2] & (! w_data1857w[2..2])), (w_anode1985w[1..1] & w_data1857w[1..1]), (w_anode1985w[0..0] & (! w_data1857w[0..0])), w_anode1957w[1..1]);
	w_anode1995w[] = ( (w_anode1995w[2..2] & (! w_data1857w[2..2])), (w_anode1995w[1..1] & w_data1857w[1..1]), (w_anode1995w[0..0] & w_data1857w[0..0]), w_anode1957w[1..1]);
	w_anode2005w[] = ( (w_anode2005w[2..2] & w_data1857w[2..2]), (w_anode2005w[1..1] & (! w_data1857w[1..1])), (w_anode2005w[0..0] & (! w_data1857w[0..0])), w_anode1957w[1..1]);
	w_anode2015w[] = ( (w_anode2015w[2..2] & w_data1857w[2..2]), (w_anode2015w[1..1] & (! w_data1857w[1..1])), (w_anode2015w[0..0] & w_data1857w[0..0]), w_anode1957w[1..1]);
	w_anode2025w[] = ( (w_anode2025w[2..2] & w_data1857w[2..2]), (w_anode2025w[1..1] & w_data1857w[1..1]), (w_anode2025w[0..0] & (! w_data1857w[0..0])), w_anode1957w[1..1]);
	w_anode2035w[] = ( (w_anode2035w[2..2] & w_data1857w[2..2]), (w_anode2035w[1..1] & w_data1857w[1..1]), (w_anode2035w[0..0] & w_data1857w[0..0]), w_anode1957w[1..1]);
	w_data1857w[2..0] = data_wire[2..0];
END;
--VALID FILE
