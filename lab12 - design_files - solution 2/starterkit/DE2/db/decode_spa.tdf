--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone II" LPM_DECODES=18 LPM_WIDTH=5 data enable eq
--VERSION_BEGIN 13.0 cbx_cycloneii 2013:06:12:18:03:43:SJ cbx_lpm_add_sub 2013:06:12:18:03:43:SJ cbx_lpm_compare 2013:06:12:18:03:43:SJ cbx_lpm_decode 2013:06:12:18:03:43:SJ cbx_mgl 2013:06:12:18:05:10:SJ cbx_stratix 2013:06:12:18:03:43:SJ cbx_stratixii 2013:06:12:18:03:43:SJ  VERSION_END


-- Copyright (C) 1991-2013 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.



--synthesis_resources = lut 36 
SUBDESIGN decode_spa
( 
	data[4..0]	:	input;
	enable	:	input;
	eq[17..0]	:	output;
) 
VARIABLE 
	data_wire[4..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[17..0]	: WIRE;
	eq_wire[31..0]	: WIRE;
	w_anode1027w[2..0]	: WIRE;
	w_anode1040w[3..0]	: WIRE;
	w_anode1057w[3..0]	: WIRE;
	w_anode1067w[3..0]	: WIRE;
	w_anode1077w[3..0]	: WIRE;
	w_anode1087w[3..0]	: WIRE;
	w_anode1097w[3..0]	: WIRE;
	w_anode1107w[3..0]	: WIRE;
	w_anode1117w[3..0]	: WIRE;
	w_anode1129w[2..0]	: WIRE;
	w_anode1138w[3..0]	: WIRE;
	w_anode1149w[3..0]	: WIRE;
	w_anode1159w[3..0]	: WIRE;
	w_anode1169w[3..0]	: WIRE;
	w_anode1179w[3..0]	: WIRE;
	w_anode1189w[3..0]	: WIRE;
	w_anode1199w[3..0]	: WIRE;
	w_anode1209w[3..0]	: WIRE;
	w_anode1220w[2..0]	: WIRE;
	w_anode1229w[3..0]	: WIRE;
	w_anode1240w[3..0]	: WIRE;
	w_anode1250w[3..0]	: WIRE;
	w_anode1260w[3..0]	: WIRE;
	w_anode1270w[3..0]	: WIRE;
	w_anode1280w[3..0]	: WIRE;
	w_anode1290w[3..0]	: WIRE;
	w_anode1300w[3..0]	: WIRE;
	w_anode1311w[2..0]	: WIRE;
	w_anode1320w[3..0]	: WIRE;
	w_anode1331w[3..0]	: WIRE;
	w_anode1341w[3..0]	: WIRE;
	w_anode1351w[3..0]	: WIRE;
	w_anode1361w[3..0]	: WIRE;
	w_anode1371w[3..0]	: WIRE;
	w_anode1381w[3..0]	: WIRE;
	w_anode1391w[3..0]	: WIRE;
	w_data1025w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[17..0] = eq_wire[17..0];
	eq_wire[] = ( ( w_anode1391w[3..3], w_anode1381w[3..3], w_anode1371w[3..3], w_anode1361w[3..3], w_anode1351w[3..3], w_anode1341w[3..3], w_anode1331w[3..3], w_anode1320w[3..3]), ( w_anode1300w[3..3], w_anode1290w[3..3], w_anode1280w[3..3], w_anode1270w[3..3], w_anode1260w[3..3], w_anode1250w[3..3], w_anode1240w[3..3], w_anode1229w[3..3]), ( w_anode1209w[3..3], w_anode1199w[3..3], w_anode1189w[3..3], w_anode1179w[3..3], w_anode1169w[3..3], w_anode1159w[3..3], w_anode1149w[3..3], w_anode1138w[3..3]), ( w_anode1117w[3..3], w_anode1107w[3..3], w_anode1097w[3..3], w_anode1087w[3..3], w_anode1077w[3..3], w_anode1067w[3..3], w_anode1057w[3..3], w_anode1040w[3..3]));
	w_anode1027w[] = ( (w_anode1027w[1..1] & (! data_wire[4..4])), (w_anode1027w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1040w[] = ( (w_anode1040w[2..2] & (! w_data1025w[2..2])), (w_anode1040w[1..1] & (! w_data1025w[1..1])), (w_anode1040w[0..0] & (! w_data1025w[0..0])), w_anode1027w[2..2]);
	w_anode1057w[] = ( (w_anode1057w[2..2] & (! w_data1025w[2..2])), (w_anode1057w[1..1] & (! w_data1025w[1..1])), (w_anode1057w[0..0] & w_data1025w[0..0]), w_anode1027w[2..2]);
	w_anode1067w[] = ( (w_anode1067w[2..2] & (! w_data1025w[2..2])), (w_anode1067w[1..1] & w_data1025w[1..1]), (w_anode1067w[0..0] & (! w_data1025w[0..0])), w_anode1027w[2..2]);
	w_anode1077w[] = ( (w_anode1077w[2..2] & (! w_data1025w[2..2])), (w_anode1077w[1..1] & w_data1025w[1..1]), (w_anode1077w[0..0] & w_data1025w[0..0]), w_anode1027w[2..2]);
	w_anode1087w[] = ( (w_anode1087w[2..2] & w_data1025w[2..2]), (w_anode1087w[1..1] & (! w_data1025w[1..1])), (w_anode1087w[0..0] & (! w_data1025w[0..0])), w_anode1027w[2..2]);
	w_anode1097w[] = ( (w_anode1097w[2..2] & w_data1025w[2..2]), (w_anode1097w[1..1] & (! w_data1025w[1..1])), (w_anode1097w[0..0] & w_data1025w[0..0]), w_anode1027w[2..2]);
	w_anode1107w[] = ( (w_anode1107w[2..2] & w_data1025w[2..2]), (w_anode1107w[1..1] & w_data1025w[1..1]), (w_anode1107w[0..0] & (! w_data1025w[0..0])), w_anode1027w[2..2]);
	w_anode1117w[] = ( (w_anode1117w[2..2] & w_data1025w[2..2]), (w_anode1117w[1..1] & w_data1025w[1..1]), (w_anode1117w[0..0] & w_data1025w[0..0]), w_anode1027w[2..2]);
	w_anode1129w[] = ( (w_anode1129w[1..1] & (! data_wire[4..4])), (w_anode1129w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1138w[] = ( (w_anode1138w[2..2] & (! w_data1025w[2..2])), (w_anode1138w[1..1] & (! w_data1025w[1..1])), (w_anode1138w[0..0] & (! w_data1025w[0..0])), w_anode1129w[2..2]);
	w_anode1149w[] = ( (w_anode1149w[2..2] & (! w_data1025w[2..2])), (w_anode1149w[1..1] & (! w_data1025w[1..1])), (w_anode1149w[0..0] & w_data1025w[0..0]), w_anode1129w[2..2]);
	w_anode1159w[] = ( (w_anode1159w[2..2] & (! w_data1025w[2..2])), (w_anode1159w[1..1] & w_data1025w[1..1]), (w_anode1159w[0..0] & (! w_data1025w[0..0])), w_anode1129w[2..2]);
	w_anode1169w[] = ( (w_anode1169w[2..2] & (! w_data1025w[2..2])), (w_anode1169w[1..1] & w_data1025w[1..1]), (w_anode1169w[0..0] & w_data1025w[0..0]), w_anode1129w[2..2]);
	w_anode1179w[] = ( (w_anode1179w[2..2] & w_data1025w[2..2]), (w_anode1179w[1..1] & (! w_data1025w[1..1])), (w_anode1179w[0..0] & (! w_data1025w[0..0])), w_anode1129w[2..2]);
	w_anode1189w[] = ( (w_anode1189w[2..2] & w_data1025w[2..2]), (w_anode1189w[1..1] & (! w_data1025w[1..1])), (w_anode1189w[0..0] & w_data1025w[0..0]), w_anode1129w[2..2]);
	w_anode1199w[] = ( (w_anode1199w[2..2] & w_data1025w[2..2]), (w_anode1199w[1..1] & w_data1025w[1..1]), (w_anode1199w[0..0] & (! w_data1025w[0..0])), w_anode1129w[2..2]);
	w_anode1209w[] = ( (w_anode1209w[2..2] & w_data1025w[2..2]), (w_anode1209w[1..1] & w_data1025w[1..1]), (w_anode1209w[0..0] & w_data1025w[0..0]), w_anode1129w[2..2]);
	w_anode1220w[] = ( (w_anode1220w[1..1] & data_wire[4..4]), (w_anode1220w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode1229w[] = ( (w_anode1229w[2..2] & (! w_data1025w[2..2])), (w_anode1229w[1..1] & (! w_data1025w[1..1])), (w_anode1229w[0..0] & (! w_data1025w[0..0])), w_anode1220w[2..2]);
	w_anode1240w[] = ( (w_anode1240w[2..2] & (! w_data1025w[2..2])), (w_anode1240w[1..1] & (! w_data1025w[1..1])), (w_anode1240w[0..0] & w_data1025w[0..0]), w_anode1220w[2..2]);
	w_anode1250w[] = ( (w_anode1250w[2..2] & (! w_data1025w[2..2])), (w_anode1250w[1..1] & w_data1025w[1..1]), (w_anode1250w[0..0] & (! w_data1025w[0..0])), w_anode1220w[2..2]);
	w_anode1260w[] = ( (w_anode1260w[2..2] & (! w_data1025w[2..2])), (w_anode1260w[1..1] & w_data1025w[1..1]), (w_anode1260w[0..0] & w_data1025w[0..0]), w_anode1220w[2..2]);
	w_anode1270w[] = ( (w_anode1270w[2..2] & w_data1025w[2..2]), (w_anode1270w[1..1] & (! w_data1025w[1..1])), (w_anode1270w[0..0] & (! w_data1025w[0..0])), w_anode1220w[2..2]);
	w_anode1280w[] = ( (w_anode1280w[2..2] & w_data1025w[2..2]), (w_anode1280w[1..1] & (! w_data1025w[1..1])), (w_anode1280w[0..0] & w_data1025w[0..0]), w_anode1220w[2..2]);
	w_anode1290w[] = ( (w_anode1290w[2..2] & w_data1025w[2..2]), (w_anode1290w[1..1] & w_data1025w[1..1]), (w_anode1290w[0..0] & (! w_data1025w[0..0])), w_anode1220w[2..2]);
	w_anode1300w[] = ( (w_anode1300w[2..2] & w_data1025w[2..2]), (w_anode1300w[1..1] & w_data1025w[1..1]), (w_anode1300w[0..0] & w_data1025w[0..0]), w_anode1220w[2..2]);
	w_anode1311w[] = ( (w_anode1311w[1..1] & data_wire[4..4]), (w_anode1311w[0..0] & data_wire[3..3]), enable_wire);
	w_anode1320w[] = ( (w_anode1320w[2..2] & (! w_data1025w[2..2])), (w_anode1320w[1..1] & (! w_data1025w[1..1])), (w_anode1320w[0..0] & (! w_data1025w[0..0])), w_anode1311w[2..2]);
	w_anode1331w[] = ( (w_anode1331w[2..2] & (! w_data1025w[2..2])), (w_anode1331w[1..1] & (! w_data1025w[1..1])), (w_anode1331w[0..0] & w_data1025w[0..0]), w_anode1311w[2..2]);
	w_anode1341w[] = ( (w_anode1341w[2..2] & (! w_data1025w[2..2])), (w_anode1341w[1..1] & w_data1025w[1..1]), (w_anode1341w[0..0] & (! w_data1025w[0..0])), w_anode1311w[2..2]);
	w_anode1351w[] = ( (w_anode1351w[2..2] & (! w_data1025w[2..2])), (w_anode1351w[1..1] & w_data1025w[1..1]), (w_anode1351w[0..0] & w_data1025w[0..0]), w_anode1311w[2..2]);
	w_anode1361w[] = ( (w_anode1361w[2..2] & w_data1025w[2..2]), (w_anode1361w[1..1] & (! w_data1025w[1..1])), (w_anode1361w[0..0] & (! w_data1025w[0..0])), w_anode1311w[2..2]);
	w_anode1371w[] = ( (w_anode1371w[2..2] & w_data1025w[2..2]), (w_anode1371w[1..1] & (! w_data1025w[1..1])), (w_anode1371w[0..0] & w_data1025w[0..0]), w_anode1311w[2..2]);
	w_anode1381w[] = ( (w_anode1381w[2..2] & w_data1025w[2..2]), (w_anode1381w[1..1] & w_data1025w[1..1]), (w_anode1381w[0..0] & (! w_data1025w[0..0])), w_anode1311w[2..2]);
	w_anode1391w[] = ( (w_anode1391w[2..2] & w_data1025w[2..2]), (w_anode1391w[1..1] & w_data1025w[1..1]), (w_anode1391w[0..0] & w_data1025w[0..0]), w_anode1311w[2..2]);
	w_data1025w[2..0] = data_wire[2..0];
END;
--VALID FILE
